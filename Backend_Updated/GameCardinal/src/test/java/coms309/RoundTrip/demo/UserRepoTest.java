// package coms309.RoundTrip.demo.Controller;

// import coms309.RoundTrip.demo.Model.*;
// import coms309.RoundTrip.demo.Repository.UserRepository;
// import org.junit.Test;
// import org.junit.runner.RunWith;
// import org.springframework.beans.factory.annotation.Autowired;
// import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
// import org.springframework.boot.test.context.SpringBootTest;
// import org.springframework.boot.test.mock.mockito.MockBean;
// import org.springframework.http.ResponseEntity;
// import org.springframework.test.context.junit4.SpringRunner;

// import java.util.ArrayList;
// import java.util.List;

// import static org.junit.jupiter.api.Assertions.assertEquals;
// import static org.junit.jupiter.api.Assertions.assertTrue;
// import static org.mockito.Mockito.*;

// @RunWith(SpringRunner.class)
// @SpringBootTest
// @AutoConfigureMockMvc
// public class UserRepoTest
// {
//     @Autowired
//     private UserController uControl;

//     @MockBean

//     @Test
//     public void getAllUsersTest(){
//         ArrayList<User> usersList = new ArrayList<>();

//         usersList.add(new User("BuilderBob", "CanWeDoIt", "bob@builder.com", "Bob", UserType.GMUSR, new ProfilePicture(), new GameUser()));
//         usersList.add(new User("Winston", "YesWeCan", "winston@builder.com", "Winston", UserType.MSGUSR, new ProfilePicture(1, "Jupiter", new User()), new GameUser()));

//         when(uRepo.findAll()).thenReturn(usersList);

//         List<User> result = uControl.getAllData();
//         assertEquals(2, result.size());
//         assertTrue(result.get(0).getUsername().equalsIgnoreCase("BuilderBob"));
//         assertTrue(result.get(1).getPicture().getLocation().equalsIgnoreCase("jupiter"));

//         verify(uRepo, times(1)).findAll();
//     }

//     @Test
//     public void getByIDTest()
//     {
//         //IDs are autogenerated thus
//         int i = 1;
//         ArrayList<User> usersList = new ArrayList<>();

//         User bob = new User("BuilderBob", "CanWeDoIt", "bob@builder.com", "Bob", UserType.GMUSR, new ProfilePicture(), new GameUser());
//         bob.setID(i++);

//         User winston  = new User("Winston", "YesWeCan", "winston@builder.com", "Winston", UserType.MSGUSR, new ProfilePicture(1, "Jupiter", new User()), new GameUser());
//         winston.setID(i++);

//         User wendy = new User("Wendy", "TheMixer", "wendy@builder.com", "Wendy", UserType.VIDUSR, new ProfilePicture(),
//                 new GameUser(2, new User("Wendy", "TheMixer", "wendy@builder.com", "Wendy", UserType.VIDUSR,new ProfilePicture(), new GameUser()),
//                         new ArrayList<Game>()));
//         wendy.setID(i);

//         usersList.add(bob);
//         usersList.add(winston);
//         usersList.add(wendy);

//         when(uRepo.getById(1)).thenReturn(winston);

//         User found = uRepo.getById(1);
//         assertEquals(winston, found);
//         verify(uRepo, times(1)).getById(1);

//     }


//     @Test
//     public void testfindByEmail()
//     {
//         //IDs are autogenerated thus
//         int i = 1;
//         ArrayList<User> usersList = new ArrayList<>();

//         User bob = new User("BuilderBob", "CanWeDoIt", "bob@builder.com", "Bob", UserType.GMUSR, new ProfilePicture(), new GameUser());
//         bob.setID(i++);

//         User winston  = new User("Winston", "YesWeCan", "winston@builder.com", "Winston", UserType.MSGUSR, new ProfilePicture(1, "Jupiter", new User()), new GameUser());
//         winston.setID(i++);

//         User wendy = new User("Wendy", "TheMixer", "wendy@builder.com", "Wendy", UserType.VIDUSR, new ProfilePicture(),
//                 new GameUser(2, new User("Wendy", "TheMixer", "wendy@builder.com", "Wendy", UserType.VIDUSR,new ProfilePicture(), new GameUser()),
//                         new ArrayList<Game>()));
//         wendy.setID(i);

//         usersList.add(bob);
//         usersList.add(winston);
//         usersList.add(wendy);

//         when(uRepo.findByEmail("wendy@builder.com")).thenReturn(wendy);

//         assertEquals(uRepo.findByEmail("wendy@builder.com"), wendy);
//     }

//     @Test
//     public void newUserTest()
//     {
//         ArrayList<User> mockRepo = new ArrayList<>();
//         User wendy = new User("Wendy", "TheMixer", "wendy@builder.com", "Wendy", UserType.VIDUSR, new ProfilePicture(),
//                 new GameUser(2, new User("Wendy", "TheMixer", "wendy@builder.com", "Wendy", UserType.VIDUSR,new ProfilePicture(), new GameUser()),
//                         new ArrayList<Game>()));

//         when(uRepo.save(any(User.class)))
//                 .thenAnswer(i -> i.getArguments()[0]);

//         ResponseEntity<User> answer = uControl.saveUser(wendy);
//         String uEmail = answer.getBody().getEmail();

//         assertEquals(wendy.getEmail(), uEmail);
//     }
// }


